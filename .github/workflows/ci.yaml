name: GoScanner
on:
  push:
    branches:
      - main
    tags:
      - "v*" # Trigger on tags that start with 'v' (e.g., v1.0.0, v2.1.0, etc.)
jobs:
  build-windows:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod

      - name: Install Fyne
        run: go install fyne.io/fyne/v2/cmd/fyne@latest

      - name: Get Git Tag
        id: git_tag
        run: echo "::set-output name=tag::$(git describe --tags --abbrev=0)"
        shell: pwsh

      - name: Mod clean
        run: go clean -modcache

      - name: Build and Package for Windows
        run: |
          fyne package -os windows -name "goscanner"
        shell: pwsh

      - name: Create Dist Windows
        run: |
          mkdir -p dist/windows
        shell: pwsh

      - name: Move file Dist Windows
        run: |
          mv goscanner.exe dist/windows/
        shell: pwsh

      - name: Upload Windows Artefacts
        uses: actions/upload-artifact@v4
        with:
          name: goscanner_windows-${{ steps.git_tag.outputs.tag }}.zip
          path: dist/windows
  build-linux:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libsane-dev gcc libgl1-mesa-dev xorg-dev

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod

      - name: Install Fyne
        run: go install fyne.io/fyne/v2/cmd/fyne@latest

      - name: Get Git Tag
        id: git_tag
        run: echo "::set-output name=tag::$(git describe --tags --abbrev=0)"

      - name: Mod clean
        run: go clean -modcache

      - name: Build and Package for Linux
        run: |
          fyne package -os linux -name "goscanner"

      - name: Create Dist Linux
        run: |
          mkdir -p dist/linux

      - name: Move file Dist Linux
        run: |
          mv goscanner.tar.xz dist/linux/

      - name: Upload Linux Artefacts
        uses: actions/upload-artifact@v4
        with:
          name: gosca nner_linux-${{steps.git_tag.outputs.tag}}.zip
          path: dist/linux
